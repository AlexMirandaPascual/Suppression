from graphic_generator import *

def generateFileandGraphApple():
    delta = np.power((1/1000), 2)
    generate_average_distance_list()
    generate_files_m_M()
    generate_iterations_suppressed_database()
    MoS_Laplace_and_Gaussian(epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian(epsilon=0.25,delta=delta)
    MoS_Laplace_and_Gaussian(epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian(epsilon=0.5,delta=delta)
    MoS_Laplace_and_Gaussian(epsilon=1,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(epsilon=1,delta=delta)
    M_Laplace_and_Gaussian(epsilon=1,delta=delta)
    MoS_Laplace_and_Gaussian(epsilon=2,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(epsilon=2,delta=delta)
    M_Laplace_and_Gaussian(epsilon=2,delta=delta)
    #calculateAverageofelement()
    #combining_averages()
    #generate3DmetricAverages(metric="Laplace_noise")
    #generate3DmetricAverages(metric="gaussian")

def generateFileandGraphMelon():
    delta = np.power((1/1000), 2)
    generate_average_distance_list(name_fruit="Melon")
    generate_files_m_M(path_average_distances="Melondistances.csv", path_of_file = "Files m and M\\Melon\\")
    generate_iterations_suppressed_database(path_m_M = "Files m and M\\Melon\\", fruit_name="Melon")
    MoS_Laplace_and_Gaussian(file="Melon_base.csv", upper_weight= 2000, lower_weight= 1000, upper_volume= 300, lower_volume= 100, real_weight=1500, real_volume=200,epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=0.25,delta=delta)
    MoS_Laplace_and_Gaussian(file="Melon_base.csv", upper_weight= 2000, lower_weight= 1000, upper_volume= 300, lower_volume= 100, real_weight=1500, real_volume=200,epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=0.5,delta=delta)
    MoS_Laplace_and_Gaussian(file="Melon_base.csv", upper_weight= 2000, lower_weight= 1000, upper_volume= 300, lower_volume= 100, real_weight=1500, real_volume=200,epsilon=1,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=1,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=1,delta=delta)
    MoS_Laplace_and_Gaussian(file="Melon_base.csv", upper_weight= 2000, lower_weight= 1000, upper_volume= 300, lower_volume= 100, real_weight=1500, real_volume=200,epsilon=2,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=2,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Melon", upper_weight=2000, lower_weight= 1000, upper_volume=300, lower_volume=100, real_weight=1500, real_volume=200,epsilon=2,delta=delta)
    #calculateAverageofelement(file="File_graphic\\Melon_base.csv", File_name="File_graphic\\AverageMelon.csv")
    #combining_averages(path_average_supression="File_graphic\\AverageMelon.csv", path_average_suppression="File_graphic\\originalMelon suppression.csv",
    #                   file="File_graphic\\CombiningMelon.csv", real_weight=1500, real_volume=200)
    #generate3DmetricAverages(path = "File_graphic\\CombiningMelon.csv", metric="Laplace_noise")
    #generate3DmetricAverages(path = "File_graphic\\CombiningMelon.csv", metric="gaussian")

def generateFileandGraphStrawberry():
    delta = np.power((1/1000), 2)
    generate_average_distance_list(name_fruit="Strawberry")
    generate_files_m_M(path_average_distances="Strawberrydistances.csv", path_of_file = "Files m and M\\Strawberry\\")
    generate_iterations_suppressed_database(path_m_M = "Files m and M\\Strawberry\\", fruit_name="Strawberry")
    MoS_Laplace_and_Gaussian(file="Strawberry_base.csv", upper_weight= 45, lower_weight= 20, upper_volume= 30, lower_volume= 5, real_weight=30, real_volume=20,epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=0.25,delta=delta)
    MoS_Laplace_and_Gaussian(file="Strawberry_base.csv", upper_weight= 45, lower_weight= 20, upper_volume= 30, lower_volume= 5, real_weight=30, real_volume=20,epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=0.5,delta=delta)
    MoS_Laplace_and_Gaussian(file="Strawberry_base.csv", upper_weight= 45, lower_weight= 20, upper_volume= 30, lower_volume= 5, real_weight=30, real_volume=20,epsilon=1,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=1,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=1,delta=delta)
    MoS_Laplace_and_Gaussian(file="Strawberry_base.csv", upper_weight= 45, lower_weight= 20, upper_volume= 30, lower_volume= 5, real_weight=30, real_volume=20,epsilon=2,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=2,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Strawberry", upper_weight=45, lower_weight= 20, upper_volume=30, lower_volume=5, real_weight=30, real_volume=20,epsilon=2,delta=delta)
    #calculateAverageofelement(file="File_graphic\\Strawberry_base.csv", File_name="File_graphic\\AverageStrawberry.csv")
    #combining_averages(path_average_supression="File_graphic\\AverageStrawberry.csv", path_average_suppression="File_graphic\\originalStrawberry suppression.csv",
    #                   file="File_graphic\\CombiningStrawberry.csv", real_weight=30, real_volume=20)
    #generate3DmetricAverages(path = "File_graphic\\CombiningStrawberry.csv", metric="Laplace_noise")
    #generate3DmetricAverages(path = "File_graphic\\CombiningStrawberry.csv", metric="gaussian")

def generateFileandGraphPear():
    delta = np.power((1/1000), 2)
    generate_average_distance_list(name_fruit="Pear")
    generate_files_m_M(path_average_distances="Peardistances.csv", path_of_file = "Files m and M\\Pear\\")
    generate_iterations_suppressed_database(path_m_M = "Files m and M\\Pear\\", fruit_name="Pear")
    MoS_Laplace_and_Gaussian(file="Pear_base.csv", upper_weight= 200, lower_weight= 90, upper_volume= 160, lower_volume= 80, real_weight=140, real_volume=120,epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=0.25,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=0.25,delta=delta)
    MoS_Laplace_and_Gaussian(file="Pear_base.csv", upper_weight= 200, lower_weight= 90, upper_volume= 160, lower_volume= 80, real_weight=140, real_volume=120,epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=0.5,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=0.5,delta=delta)
    MoS_Laplace_and_Gaussian(file="Pear_base.csv", upper_weight= 200, lower_weight= 90, upper_volume= 160, lower_volume= 80, real_weight=140, real_volume=120,epsilon=1,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=1,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=1,delta=delta)
    MoS_Laplace_and_Gaussian(file="Pear_base.csv", upper_weight= 200, lower_weight= 90, upper_volume= 160, lower_volume= 80, real_weight=140, real_volume=120,epsilon=2,delta=delta)
    M_Laplace_and_Gaussian_change_of_parameters(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=2,delta=delta)
    M_Laplace_and_Gaussian(fruit_name = "Pear", upper_weight=200, lower_weight= 90, upper_volume=160, lower_volume=80, real_weight=140, real_volume=120,epsilon=2,delta=delta)
    #calculateAverageofelement(file="File_graphic\\Pear_base.csv", File_name="File_graphic\\AveragePear.csv")
    #combining_averages(path_average_supression="File_graphic\\AveragePear.csv", path_average_suppression="File_graphic\\originalPear suppression.csv",
    #                   file="File_graphic\\CombiningPear.csv", real_weight=140, real_volume=120)
    #generate3DmetricAverages(path = "File_graphic\\CombiningPear.csv", metric="Laplace_noise")
    #generate3DmetricAverages(path = "File_graphic\\CombiningPear.csv", metric="gaussian")




